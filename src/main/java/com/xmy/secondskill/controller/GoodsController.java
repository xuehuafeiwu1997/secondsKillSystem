package com.xmy.secondskill.controller;import com.xmy.secondskill.entity.Goods;import com.xmy.secondskill.entity.User;import com.xmy.secondskill.redis.GoodsKey;import com.xmy.secondskill.redis.MiaoShaUserKey;import com.xmy.secondskill.redis.RedisService;import com.xmy.secondskill.service.GoodsService;import com.xmy.secondskill.service.UserService;import com.xmy.secondskill.vo.GoodsVo;import org.apache.commons.lang3.StringUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.ApplicationContext;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.*;import org.thymeleaf.Thymeleaf;import org.thymeleaf.context.IWebContext;import org.thymeleaf.context.WebContext;import org.thymeleaf.spring5.view.ThymeleafViewResolver;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.util.List;/** * @author xmy * @date 2021/3/26 9:24 下午 */@Controller@RequestMapping("/goods")public class GoodsController {    @Autowired    UserService userService;    @Autowired    RedisService redisService;    @Autowired    GoodsService goodsService;    @Autowired    ThymeleafViewResolver thymeleafViewResolver;    @Autowired    ApplicationContext applicationContext;    @RequestMapping(value= "/to_list",produces = "text/html")    @ResponseBody    public String list(HttpServletRequest request,HttpServletResponse response, Model model, User user) {        model.addAttribute("user",user);        //尝试取缓存        String html = redisService.get(GoodsKey.getGoodsList,"",String.class);        if (!StringUtils.isEmpty(html)) {            return html;        }        //查询商品列表        List<String> name = goodsService.getAllGoods();        List<Goods> goods = goodsService.getTestGoods();        List<GoodsVo> goodsList = goodsService.listGoodsVo();        model.addAttribute("goodsList",goodsList);        //手动渲染，原本都是springBoot帮助我们渲染的        WebContext ctx = new WebContext(request,response,request.getServletContext(),                request.getLocale(),model.asMap());        html = thymeleafViewResolver.getTemplateEngine().process("goods_list", ctx);        if (!StringUtils.isEmpty(html)) {            redisService.set(GoodsKey.getGoodsList,"",html);        }        return html;    }    @RequestMapping(value = "to_detail/{goodsId}",produces = "text/html")    @ResponseBody    public String detail(HttpServletRequest request,HttpServletResponse response,Model model, User user, @PathVariable("goodsId") Long goodsId) {        model.addAttribute("user",user);        //取缓存（url及缓存，上面是页面级缓存，上面的不论谁访问都是同一个界面，这个界面是商品详情页，不同的人访问看到的界面不同）        String html = redisService.get(GoodsKey.getGoodsDetail, ""+goodsId, String.class);        if(!StringUtils.isEmpty(html)) {            return html;        }        GoodsVo goods =goodsService.getGoodsVoByGoodsId(goodsId);        model.addAttribute("goods",goods);        long startAt = goods.getStartDate().getTime();        long endAt = goods.getEndDate().getTime();        long now = System.currentTimeMillis();        int miaoshaStatus = 0;        int remainSeconds = 0;        if (now < startAt) {//秒杀还未开始，倒计时            miaoshaStatus = 0;            remainSeconds = (int)((startAt-now)/1000);        } else if (now > endAt) {//秒杀已经结束            miaoshaStatus = 2;            remainSeconds = -1;        } else {//秒杀进行中            miaoshaStatus = 1;            remainSeconds = 0;        }        model.addAttribute("miaoshaStatus",miaoshaStatus);        model.addAttribute("remainSeconds",remainSeconds);        //手动渲染        WebContext ctx = new WebContext(request,response,request.getServletContext(),                request.getLocale(),model.asMap());        html = thymeleafViewResolver.getTemplateEngine().process("goods_detail", ctx);        if(!StringUtils.isEmpty(html)) {            redisService.set(GoodsKey.getGoodsDetail, ""+goodsId, html);        }        return html;    }//    //不使用argumentResolver时，每一个界面都需要像下面这样获取token值，并且还要判断是否为空，代码特别繁琐，使用argumentResolver时，就会使代码简洁很多//    @RequestMapping("/to_detail")//    public String detail(HttpServletResponse response,Model model, @CookieValue(value = UserService.COOKIE_NAME_TOKEN,required = false) String cookieToken, @RequestParam(value = UserService.COOKIE_NAME_TOKEN,required = false) String paramToken) {//        if (StringUtils.isEmpty(cookieToken) && StringUtils.isEmpty(paramToken)) {//            //如果两个地方的cookie都没有，则直接返回登录界面//            return "login";//        }//        String token = StringUtils.isEmpty(paramToken) ? cookieToken : paramToken;//        User user = userService.getByToken(response,token);//        model.addAttribute("user",user);//        return "goods_list";//    }    //测试页面级缓存    @RequestMapping(value = "to_detail2/{goodsId}",produces = "text/html")    @ResponseBody    public String detail2(HttpServletRequest request,HttpServletResponse response,Model model, User user, @PathVariable("goodsId") Long goodsId) {        model.addAttribute("user",user);        //取缓存（url及缓存，上面是页面级缓存，上面的不论谁访问都是同一个界面，这个界面是商品详情页，不同的人访问看到的界面不同）        String html = redisService.get(GoodsKey.getGoodsDetail, ""+goodsId, String.class);        if(!StringUtils.isEmpty(html)) {            return html;        }        GoodsVo goods =goodsService.getGoodsVoByGoodsId(goodsId);        model.addAttribute("goods",goods);        long startAt = goods.getStartDate().getTime();        long endAt = goods.getEndDate().getTime();        long now = System.currentTimeMillis();        int miaoshaStatus = 0;        int remainSeconds = 0;        if (now < startAt) {//秒杀还未开始，倒计时            miaoshaStatus = 0;            remainSeconds = (int)((startAt-now)/1000);        } else if (now > endAt) {//秒杀已经结束            miaoshaStatus = 2;            remainSeconds = -1;        } else {//秒杀进行中            miaoshaStatus = 1;            remainSeconds = 0;        }        model.addAttribute("miaoshaStatus",miaoshaStatus);        model.addAttribute("remainSeconds",remainSeconds);        //手动渲染        WebContext ctx = new WebContext(request,response,request.getServletContext(),                request.getLocale(),model.asMap());        html = thymeleafViewResolver.getTemplateEngine().process("goods_detail", ctx);        if(!StringUtils.isEmpty(html)) {            redisService.set(GoodsKey.getGoodsDetail, ""+goodsId, html);        }        return html;    }}